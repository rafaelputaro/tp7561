// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: peer.proto

package protopb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Contiene los datos del contacto que hace el ping
type PingOperands struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceId      []byte                 `protobuf:"bytes,1,req,name=sourceId" json:"sourceId,omitempty"`
	SourceUrl     *string                `protobuf:"bytes,2,req,name=sourceUrl" json:"sourceUrl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingOperands) Reset() {
	*x = PingOperands{}
	mi := &file_peer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingOperands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingOperands) ProtoMessage() {}

func (x *PingOperands) ProtoReflect() protoreflect.Message {
	mi := &file_peer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingOperands.ProtoReflect.Descriptor instead.
func (*PingOperands) Descriptor() ([]byte, []int) {
	return file_peer_proto_rawDescGZIP(), []int{0}
}

func (x *PingOperands) GetSourceId() []byte {
	if x != nil {
		return x.SourceId
	}
	return nil
}

func (x *PingOperands) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

// Contiene los datos del contacto fuente y los contactos recomendados para el par destino
type ShCtsRecipOpers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceId      []byte                 `protobuf:"bytes,1,req,name=sourceId" json:"sourceId,omitempty"`
	SourceUrl     *string                `protobuf:"bytes,2,req,name=sourceUrl" json:"sourceUrl,omitempty"`
	ContactsIds   [][]byte               `protobuf:"bytes,3,rep,name=contactsIds" json:"contactsIds,omitempty"`
	ContactsUrls  []string               `protobuf:"bytes,4,rep,name=contactsUrls" json:"contactsUrls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShCtsRecipOpers) Reset() {
	*x = ShCtsRecipOpers{}
	mi := &file_peer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShCtsRecipOpers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShCtsRecipOpers) ProtoMessage() {}

func (x *ShCtsRecipOpers) ProtoReflect() protoreflect.Message {
	mi := &file_peer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShCtsRecipOpers.ProtoReflect.Descriptor instead.
func (*ShCtsRecipOpers) Descriptor() ([]byte, []int) {
	return file_peer_proto_rawDescGZIP(), []int{1}
}

func (x *ShCtsRecipOpers) GetSourceId() []byte {
	if x != nil {
		return x.SourceId
	}
	return nil
}

func (x *ShCtsRecipOpers) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *ShCtsRecipOpers) GetContactsIds() [][]byte {
	if x != nil {
		return x.ContactsIds
	}
	return nil
}

func (x *ShCtsRecipOpers) GetContactsUrls() []string {
	if x != nil {
		return x.ContactsUrls
	}
	return nil
}

// Contiene los contactos recomendados por el nodo destino
type ShCtsRecipRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContactsIds   [][]byte               `protobuf:"bytes,1,rep,name=contactsIds" json:"contactsIds,omitempty"`
	ContactsUrls  []string               `protobuf:"bytes,2,rep,name=contactsUrls" json:"contactsUrls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShCtsRecipRes) Reset() {
	*x = ShCtsRecipRes{}
	mi := &file_peer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShCtsRecipRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShCtsRecipRes) ProtoMessage() {}

func (x *ShCtsRecipRes) ProtoReflect() protoreflect.Message {
	mi := &file_peer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShCtsRecipRes.ProtoReflect.Descriptor instead.
func (*ShCtsRecipRes) Descriptor() ([]byte, []int) {
	return file_peer_proto_rawDescGZIP(), []int{2}
}

func (x *ShCtsRecipRes) GetContactsIds() [][]byte {
	if x != nil {
		return x.ContactsIds
	}
	return nil
}

func (x *ShCtsRecipRes) GetContactsUrls() []string {
	if x != nil {
		return x.ContactsUrls
	}
	return nil
}

// Contiene la información sobre un bloque a guardar
type StoreBlockOpers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceId      []byte                 `protobuf:"bytes,1,req,name=sourceId" json:"sourceId,omitempty"`
	SourceUrl     *string                `protobuf:"bytes,2,req,name=sourceUrl" json:"sourceUrl,omitempty"`
	Key           []byte                 `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	BlockName     *string                `protobuf:"bytes,4,req,name=blockName" json:"blockName,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,req,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreBlockOpers) Reset() {
	*x = StoreBlockOpers{}
	mi := &file_peer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBlockOpers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBlockOpers) ProtoMessage() {}

func (x *StoreBlockOpers) ProtoReflect() protoreflect.Message {
	mi := &file_peer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBlockOpers.ProtoReflect.Descriptor instead.
func (*StoreBlockOpers) Descriptor() ([]byte, []int) {
	return file_peer_proto_rawDescGZIP(), []int{3}
}

func (x *StoreBlockOpers) GetSourceId() []byte {
	if x != nil {
		return x.SourceId
	}
	return nil
}

func (x *StoreBlockOpers) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *StoreBlockOpers) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *StoreBlockOpers) GetBlockName() string {
	if x != nil && x.BlockName != nil {
		return *x.BlockName
	}
	return ""
}

func (x *StoreBlockOpers) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Contiene la información sobre un bloque a buscar
type FindBlockOpers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceId      []byte                 `protobuf:"bytes,1,req,name=sourceId" json:"sourceId,omitempty"`
	SourceUrl     *string                `protobuf:"bytes,2,req,name=sourceUrl" json:"sourceUrl,omitempty"`
	BlockKey      []byte                 `protobuf:"bytes,3,req,name=blockKey" json:"blockKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindBlockOpers) Reset() {
	*x = FindBlockOpers{}
	mi := &file_peer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindBlockOpers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBlockOpers) ProtoMessage() {}

func (x *FindBlockOpers) ProtoReflect() protoreflect.Message {
	mi := &file_peer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBlockOpers.ProtoReflect.Descriptor instead.
func (*FindBlockOpers) Descriptor() ([]byte, []int) {
	return file_peer_proto_rawDescGZIP(), []int{4}
}

func (x *FindBlockOpers) GetSourceId() []byte {
	if x != nil {
		return x.SourceId
	}
	return nil
}

func (x *FindBlockOpers) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *FindBlockOpers) GetBlockKey() []byte {
	if x != nil {
		return x.BlockKey
	}
	return nil
}

type FindBlockRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockName     *string                `protobuf:"bytes,1,req,name=blockName" json:"blockName,omitempty"`
	BlockData     []byte                 `protobuf:"bytes,2,req,name=blockData" json:"blockData,omitempty"`
	ContactsIds   [][]byte               `protobuf:"bytes,3,rep,name=contactsIds" json:"contactsIds,omitempty"`
	ContactsUrls  []string               `protobuf:"bytes,4,rep,name=contactsUrls" json:"contactsUrls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindBlockRes) Reset() {
	*x = FindBlockRes{}
	mi := &file_peer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindBlockRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindBlockRes) ProtoMessage() {}

func (x *FindBlockRes) ProtoReflect() protoreflect.Message {
	mi := &file_peer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindBlockRes.ProtoReflect.Descriptor instead.
func (*FindBlockRes) Descriptor() ([]byte, []int) {
	return file_peer_proto_rawDescGZIP(), []int{5}
}

func (x *FindBlockRes) GetBlockName() string {
	if x != nil && x.BlockName != nil {
		return *x.BlockName
	}
	return ""
}

func (x *FindBlockRes) GetBlockData() []byte {
	if x != nil {
		return x.BlockData
	}
	return nil
}

func (x *FindBlockRes) GetContactsIds() [][]byte {
	if x != nil {
		return x.ContactsIds
	}
	return nil
}

func (x *FindBlockRes) GetContactsUrls() []string {
	if x != nil {
		return x.ContactsUrls
	}
	return nil
}

var File_peer_proto protoreflect.FileDescriptor

const file_peer_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"peer.proto\x1a\x1bgoogle/protobuf/empty.proto\"H\n" +
	"\fPingOperands\x12\x1a\n" +
	"\bsourceId\x18\x01 \x02(\fR\bsourceId\x12\x1c\n" +
	"\tsourceUrl\x18\x02 \x02(\tR\tsourceUrl\"\x91\x01\n" +
	"\x0fShCtsRecipOpers\x12\x1a\n" +
	"\bsourceId\x18\x01 \x02(\fR\bsourceId\x12\x1c\n" +
	"\tsourceUrl\x18\x02 \x02(\tR\tsourceUrl\x12 \n" +
	"\vcontactsIds\x18\x03 \x03(\fR\vcontactsIds\x12\"\n" +
	"\fcontactsUrls\x18\x04 \x03(\tR\fcontactsUrls\"U\n" +
	"\rShCtsRecipRes\x12 \n" +
	"\vcontactsIds\x18\x01 \x03(\fR\vcontactsIds\x12\"\n" +
	"\fcontactsUrls\x18\x02 \x03(\tR\fcontactsUrls\"\x8f\x01\n" +
	"\x0fStoreBlockOpers\x12\x1a\n" +
	"\bsourceId\x18\x01 \x02(\fR\bsourceId\x12\x1c\n" +
	"\tsourceUrl\x18\x02 \x02(\tR\tsourceUrl\x12\x10\n" +
	"\x03key\x18\x03 \x02(\fR\x03key\x12\x1c\n" +
	"\tblockName\x18\x04 \x02(\tR\tblockName\x12\x12\n" +
	"\x04data\x18\x05 \x02(\fR\x04data\"f\n" +
	"\x0eFindBlockOpers\x12\x1a\n" +
	"\bsourceId\x18\x01 \x02(\fR\bsourceId\x12\x1c\n" +
	"\tsourceUrl\x18\x02 \x02(\tR\tsourceUrl\x12\x1a\n" +
	"\bblockKey\x18\x03 \x02(\fR\bblockKey\"\x90\x01\n" +
	"\fFindBlockRes\x12\x1c\n" +
	"\tblockName\x18\x01 \x02(\tR\tblockName\x12\x1c\n" +
	"\tblockData\x18\x02 \x02(\fR\tblockData\x12 \n" +
	"\vcontactsIds\x18\x03 \x03(\fR\vcontactsIds\x12\"\n" +
	"\fcontactsUrls\x18\x04 \x03(\tR\fcontactsUrls2\xd7\x01\n" +
	"\n" +
	"Operations\x12-\n" +
	"\x04Ping\x12\r.PingOperands\x1a\x16.google.protobuf.Empty\x125\n" +
	"\x11ShCtsReciprocally\x12\x10.ShCtsRecipOpers\x1a\x0e.ShCtsRecipRes\x126\n" +
	"\n" +
	"StoreBlock\x12\x10.StoreBlockOpers\x1a\x16.google.protobuf.Empty\x12+\n" +
	"\tFindBlock\x12\x0f.FindBlockOpers\x1a\r.FindBlockResB\vZ\t./protopb"

var (
	file_peer_proto_rawDescOnce sync.Once
	file_peer_proto_rawDescData []byte
)

func file_peer_proto_rawDescGZIP() []byte {
	file_peer_proto_rawDescOnce.Do(func() {
		file_peer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_peer_proto_rawDesc), len(file_peer_proto_rawDesc)))
	})
	return file_peer_proto_rawDescData
}

var file_peer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_peer_proto_goTypes = []any{
	(*PingOperands)(nil),    // 0: PingOperands
	(*ShCtsRecipOpers)(nil), // 1: ShCtsRecipOpers
	(*ShCtsRecipRes)(nil),   // 2: ShCtsRecipRes
	(*StoreBlockOpers)(nil), // 3: StoreBlockOpers
	(*FindBlockOpers)(nil),  // 4: FindBlockOpers
	(*FindBlockRes)(nil),    // 5: FindBlockRes
	(*emptypb.Empty)(nil),   // 6: google.protobuf.Empty
}
var file_peer_proto_depIdxs = []int32{
	0, // 0: Operations.Ping:input_type -> PingOperands
	1, // 1: Operations.ShCtsReciprocally:input_type -> ShCtsRecipOpers
	3, // 2: Operations.StoreBlock:input_type -> StoreBlockOpers
	4, // 3: Operations.FindBlock:input_type -> FindBlockOpers
	6, // 4: Operations.Ping:output_type -> google.protobuf.Empty
	2, // 5: Operations.ShCtsReciprocally:output_type -> ShCtsRecipRes
	6, // 6: Operations.StoreBlock:output_type -> google.protobuf.Empty
	5, // 7: Operations.FindBlock:output_type -> FindBlockRes
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_peer_proto_init() }
func file_peer_proto_init() {
	if File_peer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_peer_proto_rawDesc), len(file_peer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_peer_proto_goTypes,
		DependencyIndexes: file_peer_proto_depIdxs,
		MessageInfos:      file_peer_proto_msgTypes,
	}.Build()
	File_peer_proto = out.File
	file_peer_proto_goTypes = nil
	file_peer_proto_depIdxs = nil
}
